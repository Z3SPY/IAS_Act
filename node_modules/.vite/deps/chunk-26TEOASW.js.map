{
  "version": 3,
  "sources": ["../../@azure/msal-browser/src/telemetry/BrowserPerformanceMeasurement.ts"],
  "sourcesContent": ["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IPerformanceMeasurement, SubMeasurement } from \"@azure/msal-common\";\n\nexport class BrowserPerformanceMeasurement implements IPerformanceMeasurement {\n    private readonly measureName: string;\n    private readonly correlationId: string;\n    private readonly startMark: string;\n    private readonly endMark: string;\n\n    constructor(name: string, correlationId: string) {\n        this.correlationId = correlationId;\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(\n            name,\n            correlationId\n        );\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(\n            name,\n            correlationId\n        );\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(\n            name,\n            correlationId\n        );\n    }\n\n    private static makeMeasureName(name: string, correlationId: string) {\n        return `msal.measure.${name}.${correlationId}`;\n    }\n\n    private static makeStartMark(name: string, correlationId: string) {\n        return `msal.start.${name}.${correlationId}`;\n    }\n\n    private static makeEndMark(name: string, correlationId: string) {\n        return `msal.end.${name}.${correlationId}`;\n    }\n\n    static supportsBrowserPerformance(): boolean {\n        return (\n            typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.mark === \"function\" &&\n            typeof window.performance.measure === \"function\" &&\n            typeof window.performance.clearMarks === \"function\" &&\n            typeof window.performance.clearMeasures === \"function\" &&\n            typeof window.performance.getEntriesByName === \"function\"\n        );\n    }\n\n    /**\n     * Flush browser marks and measurements.\n     * @param {string} correlationId\n     * @param {SubMeasurement} measurements\n     */\n    public static flushMeasurements(\n        correlationId: string,\n        measurements: SubMeasurement[]\n    ): void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                measurements.forEach((measurement) => {\n                    const measureName =\n                        BrowserPerformanceMeasurement.makeMeasureName(\n                            measurement.name,\n                            correlationId\n                        );\n                    const entriesForMeasurement =\n                        window.performance.getEntriesByName(\n                            measureName,\n                            \"measure\"\n                        );\n                    if (entriesForMeasurement.length > 0) {\n                        window.performance.clearMeasures(measureName);\n                        window.performance.clearMarks(\n                            BrowserPerformanceMeasurement.makeStartMark(\n                                measureName,\n                                correlationId\n                            )\n                        );\n                        window.performance.clearMarks(\n                            BrowserPerformanceMeasurement.makeEndMark(\n                                measureName,\n                                correlationId\n                            )\n                        );\n                    }\n                });\n            } catch (e) {\n                // Silently catch and return null\n            }\n        }\n    }\n\n    startMeasurement(): void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.startMark);\n            } catch (e) {\n                // Silently catch\n            }\n        }\n    }\n\n    endMeasurement(): void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.endMark);\n                window.performance.measure(\n                    this.measureName,\n                    this.startMark,\n                    this.endMark\n                );\n            } catch (e) {\n                // Silently catch\n            }\n        }\n    }\n\n    flushMeasurement(): number | null {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                const entriesForMeasurement =\n                    window.performance.getEntriesByName(\n                        this.measureName,\n                        \"measure\"\n                    );\n                if (entriesForMeasurement.length > 0) {\n                    const durationMs = entriesForMeasurement[0].duration;\n                    window.performance.clearMeasures(this.measureName);\n                    window.performance.clearMarks(this.startMark);\n                    window.performance.clearMarks(this.endMark);\n                    return durationMs;\n                }\n            } catch (e) {\n                // Silently catch and return null\n            }\n        }\n        return null;\n    }\n}\n"],
  "mappings": ";;;;;;;IAOa;;;;;IAAA,sCAAA,+BAA6B;MAMtC,YAAY,MAAc,eAAqB;AAC3C,aAAK,gBAAgB;AACrB,aAAK,cAAc,+BAA8B,gBAC7C,MACA,aAAa;AAEjB,aAAK,YAAY,+BAA8B,cAC3C,MACA,aAAa;AAEjB,aAAK,UAAU,+BAA8B,YACzC,MACA,aAAa;;MAIb,OAAO,gBAAgB,MAAc,eAAqB;AAC9D,eAAO,gBAAgB,IAAI,IAAI,aAAa;;MAGxC,OAAO,cAAc,MAAc,eAAqB;AAC5D,eAAO,cAAc,IAAI,IAAI,aAAa;;MAGtC,OAAO,YAAY,MAAc,eAAqB;AAC1D,eAAO,YAAY,IAAI,IAAI,aAAa;;MAG5C,OAAO,6BAA0B;AAC7B,eACI,OAAO,WAAW,eAClB,OAAO,OAAO,gBAAgB,eAC9B,OAAO,OAAO,YAAY,SAAS,cACnC,OAAO,OAAO,YAAY,YAAY,cACtC,OAAO,OAAO,YAAY,eAAe,cACzC,OAAO,OAAO,YAAY,kBAAkB,cAC5C,OAAO,OAAO,YAAY,qBAAqB;;;;;;;MAShD,OAAO,kBACV,eACA,cAA8B;AAE9B,YAAI,+BAA8B,2BAA0B,GAAI;AAC5D,cAAI;AACA,yBAAa,QAAQ,CAAC,gBAAe;AACjC,oBAAM,cACF,+BAA8B,gBAC1B,YAAY,MACZ,aAAa;AAErB,oBAAM,wBACF,OAAO,YAAY,iBACf,aACA,SAAS;AAEjB,kBAAI,sBAAsB,SAAS,GAAG;AAClC,uBAAO,YAAY,cAAc,WAAW;AAC5C,uBAAO,YAAY,WACf,+BAA8B,cAC1B,aACA,aAAa,CAChB;AAEL,uBAAO,YAAY,WACf,+BAA8B,YAC1B,aACA,aAAa,CAChB;cAER;YACL,CAAC;UACJ,SAAQ,GAAG;UAEX;QACJ;;MAGL,mBAAgB;AACZ,YAAI,+BAA8B,2BAA0B,GAAI;AAC5D,cAAI;AACA,mBAAO,YAAY,KAAK,KAAK,SAAS;UACzC,SAAQ,GAAG;UAEX;QACJ;;MAGL,iBAAc;AACV,YAAI,+BAA8B,2BAA0B,GAAI;AAC5D,cAAI;AACA,mBAAO,YAAY,KAAK,KAAK,OAAO;AACpC,mBAAO,YAAY,QACf,KAAK,aACL,KAAK,WACL,KAAK,OAAO;UAEnB,SAAQ,GAAG;UAEX;QACJ;;MAGL,mBAAgB;AACZ,YAAI,+BAA8B,2BAA0B,GAAI;AAC5D,cAAI;AACA,kBAAM,wBACF,OAAO,YAAY,iBACf,KAAK,aACL,SAAS;AAEjB,gBAAI,sBAAsB,SAAS,GAAG;AAClC,oBAAM,aAAa,sBAAsB,CAAC,EAAE;AAC5C,qBAAO,YAAY,cAAc,KAAK,WAAW;AACjD,qBAAO,YAAY,WAAW,KAAK,SAAS;AAC5C,qBAAO,YAAY,WAAW,KAAK,OAAO;AAC1C,qBAAO;YACV;UACJ,SAAQ,GAAG;UAEX;QACJ;AACD,eAAO;;IAEd;;;",
  "names": []
}
